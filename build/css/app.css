/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:rgba(0,0,0,0)}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{font-size:62.5%;box-sizing:border-box;scroll-padding-top:0rem}*,*:before,*:after{box-sizing:inherit}body{font-family:"Montserrat",sans-serif;font-optical-sizing:auto;font-style:normal;color:#000;font-size:2rem}body.overflow-hidden{overflow:hidden}p{color:#000;line-height:1.5}.contenedor{width:95%;max-width:120rem;margin:0 auto}a{text-decoration:none}h1,h2,h3{margin:0 0 5rem 0;font-weight:900}h1{font-size:4rem}h2{font-size:4.6rem}h3{font-size:6rem;text-align:center}img{max-width:100%;width:100%;height:auto;display:block}body>section{padding:10rem 0}.header{background-color:#4cb8b3}@media(min-width: 768px){.header.fixed{position:fixed;top:0;left:0;width:100%;box-shadow:.1rem .2rem .3rem #333}}.header .contenido-header{padding:2rem}@media(min-width: 768px){.header .contenido-header{display:flex;justify-content:space-between;align-items:center}}.header h1{color:#fff;text-align:center}@media(min-width: 768px){.header h1{margin:0;text-align:left}}.navegacion-principal{display:flex;flex-direction:column;align-items:center;gap:2rem}@media(min-width: 768px){.navegacion-principal{flex-direction:row}}.navegacion-principal a{color:#fff;font-size:2.4rem}.navegacion-principal a:hover,.navegacion-principal a.active{color:#fdda00}.video{position:relative;min-height:50rem;max-height:70rem;overflow:hidden}.video .overlay{position:absolute;inset:0;background:linear-gradient(270deg, rgba(117, 47, 151, 0.6), rgba(57, 23, 73, 0.9));display:flex;align-items:center}.video video{display:block;width:auto}@media(min-width: 1200px){.video video{width:100%}}.contenido-video{z-index:10}.contenido-video h2{color:#fff;font-size:7rem;margin:0}.contenido-video p{background:#f53756;display:inline-block;padding:1rem 2rem;color:#fff;font-weight:700;font-size:2.4rem;margin:0}.sobre-festival{width:95%;max-width:120rem;margin:0 auto}@media(min-width: 768px){.sobre-festival{display:grid;grid-template-columns:repeat(2, 1fr);gap:5rem}}.contenido-festival{margin-top:2rem}.contenido-festival h2{margin-bottom:2rem}.contenido-festival .fecha{color:#4cb8b3;font-weight:700}.contenido-festival p{text-align:justify}.lineup{background-color:#f53756}.lineup h3,.lineup .dia{color:#fff;text-align:center}.lineup .dia{font-size:3rem;text-transform:uppercase}.escenarios-contenedor{width:95%;max-width:120rem;margin:0 auto}@media(min-width: 768px){.escenarios-contenedor{display:grid;grid-template-columns:repeat(2, 1fr);gap:5rem}}.escenario{padding-top:2rem}.escenario .nombre-escenario{font-size:3rem;font-weight:900;text-transform:uppercase;text-align:center}.calendario{list-style:none;padding:0;margin:0}.calendario li{padding:2.5rem;font-weight:700}.calendario li span{font-weight:400}.bg-amarillo{background-color:#fdda00}.bg-amarillo li:nth-child(odd){background-color:#ffe64b}.bg-verde{background-color:#4cb8b3}.bg-verde li:nth-child(odd){background-color:#83ceca}.galeria{width:95%;max-width:120rem;margin:0 auto}.galeria-imagenes{display:grid;grid-template-columns:repeat(1, 1fr);gap:2rem}@media(min-width: 480px){.galeria-imagenes{display:grid;grid-template-columns:repeat(2, 1fr);gap:2rem}}@media(min-width: 768px){.galeria-imagenes{display:grid;grid-template-columns:repeat(3, 1fr);gap:2rem}}@media(min-width: 1200px){.galeria-imagenes{display:grid;grid-template-columns:repeat(4, 1fr);gap:2rem}}.galeria-imagenes img{height:20rem;object-fit:cover}.modal{position:fixed;inset:0;background-color:rgba(0,0,0,.5);display:grid;place-items:center;animation:fadeIn ease-in .5s}.modal.fade-out{animation:fadeOut ease-in .5s}.modal img{max-width:100rem}.btn-cerrar{width:4rem;height:4rem;border-radius:50%;background-color:#fff;border:none;color:#000;display:grid;place-items:center;font-weight:700;cursor:pointer}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeOut{0%{opacity:1}100%{opacity:0}}.contenedor-boletos{background-color:#4cb8b3}.contenedor-boletos h3{color:#fff}.contenedor-boletos .boletos{width:95%;max-width:120rem;margin:0 auto}@media(min-width: 768px){.contenedor-boletos .boletos{display:grid;grid-template-columns:repeat(2, 1fr);gap:5rem}}.pase{transition:transform .3s ease-in-out}.pase:hover{transform:scale(1.1)}.pase-nombre{font-size:3.6rem;font-weight:900;text-align:center;color:#fff}.pase-header,.pase-footer{padding:.5rem}.pase-header p,.pase-footer p{text-align:center;color:#fff;margin:0}.pase-header{background-color:#f53756}.pase-header p{text-transform:uppercase;font-size:2.2rem;padding:1rem 0}.pase-body{background-color:#fff}.pase-body ul{list-style:none;padding:0;margin:0}.pase-body li{padding:2rem;border-bottom:1px solid #e1e1e1}.pase-footer{background-color:#fff;padding:3rem}.pase-footer p{font-size:2.8rem;font-weight:900;background-color:#752f97;padding:1rem 0;border-radius:1rem;cursor:pointer;transition:background-color .3s ease-in-out}.pase-footer p:hover{background-color:#572370}.footer{background-color:#f53756;padding:2rem 0}.footer p{color:#fff;margin:0;text-align:center}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
